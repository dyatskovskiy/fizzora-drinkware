@use "sass:math";

// Підключення міксинів ====================================================================================================
@import "base/mixins";

// Підключення шрифтів ====================================================================================================

@import url(https://fonts.googleapis.com/css?family=Mulish:regular,600,700&display=swap);
@import url(https://fonts.googleapis.com/css?family=Montserrat:regular&display=swap);

// Підключення іконкових шрифтів ====================================================================================================
// Підключити, якщо є файл іконкового шрифту
// @import "fonts/icons";

// За замовчуванням шрифт ====================================================================================================
$fontFamily: "Mulish";
$fontSize: toRem(14); // де 14(px) - розмір шрифту за замовчуванням з макету

// Основні кольори
@import "base/colors-palette";

$mainColor: var(--text-primary); // Колір шрифту за замовчуванням

$secondaryColor: var(--text-secondary);

$mainBackground: var(--bg-primary);

$footerBackground: var(--bg-secondary);

$borderColor: var(--grid-border);

$hoverBgLight: #ffffff30;

$hoverBgDark: #00000030;

// Інші змінні

$mainTransition: 300ms ease;

// Налаштування адаптивної сітки ====================================================================================================

// Мінімальна ширина сторінки
$minWidth: 320;
// Ширина полотна (макету)
$maxWidth: 1366;
// Ширина обмежуючого контейнера (0 = немає обмеження)
$maxWidthContainer: 1366;
// Загальний відступ у контейнера
// (30 = по 15px ліворуч і праворуч, 0 = немає відступу)
$containerPadding: 0;

// Ширина спрацьовування першого брейкпоінту
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поїнти
$pc: toEm(
  $containerWidth
); // ПК, ноутбуки, деякі планшети у горизонтальному положенні
$tablet: toEm(599.98); // Планшети, деякі телефони в горизонтальному положенні

// Тип адаптива:
// 1 = чуйність (у контейнера немає брейкпоінтів),
// 2 = по брейк-поїнт (контейнер змінює свою ширину по брейк-поїнт)
$responsiveType: 1;

// Обнулення ====================================================================================================
@import "base/null";

// Стилі тега BODY ====================================================================================================

body {
  background-color: $mainBackground;
  // scrollbar-gutter: stable;
  // Скролл заблоковано
  .lock & {
    overflow: hidden;
    touch-action: none;
    overscroll-behavior: none;
  }
  // Сайт завантажений
  .loaded & {
  }
}
// Оболонка wrapper ====================================================================================================
.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  @supports (overflow: clip) {
    overflow: clip;
  }
  // Притискаємо footer
  > main {
    flex: 1 1 auto;
  }
  // Фікс для слайдерів
  > * {
    min-width: 0;
  }
}
// Обмежуючий контейнер ====================================================================================================

// (i) Стилі будуть застосовуватись до
// всіх класів, що містять *__container
// Наприклад header__container, main__container і т.п.
// Сніппет (HTML): cnt

@if ($responsiveType==1) {
  // Чуйна
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: toRem($containerWidth);
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      @if ($maxWidthContainer>0) {
        padding: 0 toRem(math.div($containerPadding, 2));
      } @else {
        @include adaptiveValue(
          "padding-left",
          math.div($containerPadding, 2),
          15
        );
        @include adaptiveValue(
          "padding-right",
          math.div($containerPadding, 2),
          15
        );
      }
    }
  }
} @else {
  // Брейк-поїнтами
  [class*="__container"] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: toRem($containerWidth);
    } @else {
      @if ($containerPadding>0) {
        padding: 0 toRem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: toRem(970);
    }
    @media (max-width: $tablet) {
      max-width: toRem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 toRem(math.div($containerPadding, 2));
      }
    }
  }
}

// (i) Експерементальний функціонал
// Заміна обмежуючому контейнеру
[class*="--gc"] {
  @include gridContainer();
}

// Підключення базових стилів, шаблонів (заготівель) та допоміжних класів
// Для підключення/вимкнення конкретних стилів дивись base.scss
@import "base";

// Підключення стилів загальних елементів проекту
@import "common";

// Підключення стилів окремих блоків
@import "header";
@import "footer";
@import "hero";
@import "catalog";
@import "products";
@import "cocktails-grid";
@import "collection";
@import "stories";
// Підключення стилів окремих сторінок
